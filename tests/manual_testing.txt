#
# ms-nfs41-client manual testing sequence, 2024-01-05
#
# Draft version, needs to be turned into automated tests
# if possible
#

# start cygserver as admin before running tests
# so SysV shared memory works:
# cygserver-config
# net start cygserver
# sc query cygserver


#
# Compile each of the following package
# on a NFSv4.1 share, and run each build in parallel/sequence
# multiple times on one or multiple mounts
#
# ./nfs_mount -p -o sec=sys T derfwnb4966_ipv6:/net_tmpfs2
# ./nfs_mount -p -o sec=sys R derfwnb4966_ipv6:/net_tmpfs2/test2
#

#
# ksh93 (ast-ksh)
#
git clone -b 'v1.0.8' https://github.com/ksh93/ksh.git
cd ksh
git config --global --add safe.directory "$PWD"
sed -i -r 's/mkfifo.+?(-m [[:digit:]]+)/mkfifo /g' ./src/cmd/INIT/package.sh ./bin/package
# repeat:
rm -Rf arch
time ksh93 -c 'export SHELL=/bin/bash HOSTTYPE="cygwin.i386-64"; /bin/bash ./bin/package make CC="/usr/bin/cc -std=gnu17" CCFLAGS="-Os -g" SHELL="$SHELL" HOSTTYPE="$HOSTTYPE"' 2>&1 | tee buildlog.log


#
# bash
#

# build bash with very long PWD (${#PWD} == 1053 is known to work
# if the nfs server supports path lengths > 1024)
typeset -i i
typeset longpath=''
for ((i=0 ; ${#longpath} < 1024 ; i++)) ; do
    longpath+="longpath__$i/"
done
mkdir -p "$longpath" && cd "$longpath"
printf "path_len=%d\n" "${#PWD}"

git clone https://git.savannah.gnu.org/git/bash.git
cd bash/
# Cygwin: workaround for configure using cp -p where ln -s should be used
# (this is an automake/autoconf issue, they should trust Cygwin and not use
# ancient workarounds for issues which no longer exists)
(set -o xtrace ; sed -i "s/as_ln_s='cp -pR'/as_ln_s='ln -s'/g" $(find . -name configure) )
# workaround for $ cp -p # failing with "Function not implemented"
(set -o xtrace ; sed -i -r 's/(cp.*)([[:space:]]+-p[[:space:]]+)/\1\2--no-preserve=ownership /g' $(find . -name Makefile -o -name Makefile.in) )
# run configure
./configure --with-curses
# repeat:
make clean && make -j4 all


#
# ms-nfs41-client
#
git clone https://github.com/kofemann/ms-nfs41-client.git
cd ms-nfs41-client
export PATH+=":/cygdrive/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/"
# repeat:
# clean
rm -vRf $(find . -name Debug -o -name Release)
# build
MSBuild.exe build.vc19/nfs41-client.sln -t:Build  -p:Configuration=Debug -p:Platform=x64
MSBuild.exe build.vc19/nfs41-client.sln -t:Build  -p:Configuration=Release -p:Platform=x64


#
# gcc
#
# * Notes:
# - The build requires that there are at least 131 characters left in
#   the path, e.g. $ echo $((260-${#PWD} > 131)) # should be "1",
#   otherwise the buildcan "randomly" fail with internal gcc errors.
#   Note that PWD might be the UNC path.
#   ---- snip ----
#   $ cd gcc
#   $ ksh93 -c 'integer pnl pnl_max ; find . | while read pn ; do pnl=${#pn} ; (( pnl_max=fmax(pnl, pnl_max) )) ; done ; printf "max_path_length=%d\n" pnl_max'
#   max_path_length=131
#   ---- snip ----
# - Full build can easily take ~~16 hours minutes
#
git clone -b 'releases/gcc-13.2.0' git://gcc.gnu.org/git/gcc.git
cd gcc/
# Cygwin: workaround for configure using cp -p where ln -s should be used
# (this is an automake/autoconf issue, they should trust Cygwin and not use
# ancient workarounds for issues which no longer exists)
(set -o xtrace ; sed -i "s/as_ln_s='cp -pR'/as_ln_s='ln -s'/g" $(find . -name configure) )
# run configure
./configure
# workaround for $ cp -p # failing with "Function not implemented"
(set -o xtrace ; sed -i -r 's/(cp.*)([[:space:]]+-p[[:space:]]+)/\1\2--no-preserve=ownership /g' $(find . -name Makefile -o -name Makefile.in) )
# repeat:
make -j4 clean
(yes | make -j32 all)

# EOF.
